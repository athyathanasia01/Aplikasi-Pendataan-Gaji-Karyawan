                  /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UASProject;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ANNISA INTAN NURAINI
 */
public class AdminMainMenu extends javax.swing.JPanel {
    public AdminInterface Admin;
    
    //table modelling 
    DefaultTableModel employeemodel;
    
    //listing data table
    InputDataEmployee dataemployee;
    
    /**
     * Creates new form AdminMainMenu
     */
    
    Statement st;
    ResultSet rs;
    Connection cn;
    
    public AdminMainMenu() {
        initComponents();
        this.cn      = connectivity.connected();
        dataemployee = new InputDataEmployee();
        ViewDataTable();
    }
    
    public ArrayList<Employee> EmployeeList(){
        ArrayList<Employee> EmployeeList = new ArrayList<>();
        try{
            PreparedStatement prep = cn.prepareStatement("SELECT * FROM employeetable", ResultSet.TYPE_SCROLL_SENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs = prep.executeQuery();
            Employee employee;
            if(rs.first()) {
                do {
                    employee = new Employee(
                    rs.getString("EmployeeID"),
                    rs.getString("EmployeeName"),
                    rs.getString("ManagerID"),
                    rs.getString("Position"));
                     
                    EmployeeList.add(employee);
                }while(rs.next());
            }
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return EmployeeList;
    }
    
    public final void ViewDataTable(){
        String [] columnname       = {"EmployeeID", "EmployeeName", "ManagerID", "Position"};
        dataemployee.employeelist  = EmployeeList();
        Object [][] employeeobject = new Object[dataemployee.getAll().size()][4];
        int i = 0;
        
        for (Employee epl: dataemployee.getAll()){
            String arrayEmployee[] = {epl.getEmployeeID(), epl.getEmployeeName(), epl.getManagerID(), epl.getPosition()};
            employeeobject[i]      = arrayEmployee;
            i++;
        }
        
        employeemodel = new DefaultTableModel(employeeobject, columnname);
        TableEmployee.setModel(employeemodel);
    }
    
    public void addEvent (AdminInterface event){
        this.Admin = event;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ButtondeleteDataAdmin = new javax.swing.JButton();
        ButtonAddnewAdmin = new javax.swing.JButton();
        ButtonChangeAdmin = new javax.swing.JButton();
        TableEmployeAdmin = new javax.swing.JScrollPane();
        TableEmployee = new javax.swing.JTable();
        ButtonLogoutAdmin = new javax.swing.JButton();

        setBackground(new java.awt.Color(229, 234, 143));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 1, 36)); // NOI18N
        jLabel1.setText("Employee Data");

        ButtondeleteDataAdmin.setBackground(new java.awt.Color(139, 86, 78));
        ButtondeleteDataAdmin.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        ButtondeleteDataAdmin.setText("delete");
        ButtondeleteDataAdmin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtondeleteDataAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtondeleteDataAdminActionPerformed(evt);
            }
        });

        ButtonAddnewAdmin.setBackground(new java.awt.Color(143, 214, 171));
        ButtonAddnewAdmin.setFont(new java.awt.Font("Segoe UI Historic", 2, 12)); // NOI18N
        ButtonAddnewAdmin.setText("Add New");
        ButtonAddnewAdmin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonAddnewAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonAddnewAdminMouseClicked(evt);
            }
        });
        ButtonAddnewAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddnewAdminActionPerformed(evt);
            }
        });

        ButtonChangeAdmin.setBackground(new java.awt.Color(57, 146, 107));
        ButtonChangeAdmin.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        ButtonChangeAdmin.setText("change");
        ButtonChangeAdmin.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        ButtonChangeAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonChangeAdminMouseClicked(evt);
            }
        });
        ButtonChangeAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonChangeAdminActionPerformed(evt);
            }
        });

        TableEmployee.setBackground(new java.awt.Color(206, 210, 224));
        TableEmployee.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TableEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Employee", "Employee Name", "ID Manager", "Position"
            }
        ));
        TableEmployeAdmin.setViewportView(TableEmployee);

        ButtonLogoutAdmin.setBackground(new java.awt.Color(255, 52, 100));
        ButtonLogoutAdmin.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        ButtonLogoutAdmin.setText("Logout");
        ButtonLogoutAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ButtonLogoutAdminMouseClicked(evt);
            }
        });
        ButtonLogoutAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLogoutAdminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TableEmployeAdmin)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtondeleteDataAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonAddnewAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonChangeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 221, Short.MAX_VALUE)
                        .addComponent(ButtonLogoutAdmin)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonLogoutAdmin)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonAddnewAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtondeleteDataAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonChangeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TableEmployeAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ButtondeleteDataAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtondeleteDataAdminActionPerformed
        // TODO add your handling code here:
        
        //delete data from dob table
        try {
            int column             = 0;
            int row                = TableEmployee.getSelectedRow();
            String EmployeeID1     = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL1            = "DELETE FROM dob WHERE EmployeeID =?";
            PreparedStatement pst1 = cn.prepareStatement(SQL1, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst1.setString(1, EmployeeID1);
            pst1.executeUpdate();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //delete data from employeecontact table
        try {
            int column             = 0;
            int row                = TableEmployee.getSelectedRow();
            String EmployeeID2     = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL2            = "DELETE FROM employeecontact WHERE EmployeeID =?";
            PreparedStatement pst2 = cn.prepareStatement(SQL2, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst2.setString(1, EmployeeID2);
            pst2.executeUpdate();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //delete data from employeedata table
        try {
            int column             = 0;
            int row                = TableEmployee.getSelectedRow();
            String EmployeeID3     = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL3            = "DELETE FROM employeedata WHERE EmployeeID =?";
            PreparedStatement pst3 = cn.prepareStatement(SQL3, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst3.setString(1, EmployeeID3);
            pst3.executeUpdate();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //delete data from employeelogin table 
        try {
            int column             = 0;
            int row                = TableEmployee.getSelectedRow();
            String EmployeeID4     = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL4            = "DELETE FROM employeelogin WHERE EmployeeID =?";
            PreparedStatement pst4 = cn.prepareStatement(SQL4, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst4.setString(1, EmployeeID4);
            pst4.executeUpdate();
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //delete data from employeesalary table
        try {
            int column             = 0;
            int row                = TableEmployee.getSelectedRow();
            String EmployeeID5     = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL5            = "DELETE FROM employeesalary WHERE EmployeeID =?";
            PreparedStatement pst5 = cn.prepareStatement(SQL5, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst5.setString(1, EmployeeID5);
            pst5.executeUpdate();
            
        }
        catch (SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        //delete data from employeetable table
        try {
            int column                 = 0;
            int row                    = TableEmployee.getSelectedRow();
            String EmployeeIDSelected  = TableEmployee.getModel().getValueAt(row, column).toString();
            
            String SQL6            = "DELETE FROM employeetable WHERE EmployeeID =?";
            PreparedStatement pst6 = cn.prepareStatement(SQL6, ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            pst6.setString(1, EmployeeIDSelected);
            pst6.executeUpdate();
            ViewDataTable();   //fetch data to table in gui

        }
        catch (SQLException e){
           JOptionPane.showMessageDialog(null, e.getMessage());
        }  
    }//GEN-LAST:event_ButtondeleteDataAdminActionPerformed

    private void ButtonAddnewAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddnewAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonAddnewAdminActionPerformed

    private void ButtonChangeAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonChangeAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonChangeAdminActionPerformed

    private void ButtonLogoutAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLogoutAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonLogoutAdminActionPerformed

    private void ButtonAddnewAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonAddnewAdminMouseClicked
        // TODO add your handling code here:
        Admin.AddNewBT_Admin();
    }//GEN-LAST:event_ButtonAddnewAdminMouseClicked

    private void ButtonChangeAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonChangeAdminMouseClicked
        // TODO add your handling code here:
        Admin.changeBT_Admin();
    }//GEN-LAST:event_ButtonChangeAdminMouseClicked

    private void ButtonLogoutAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonLogoutAdminMouseClicked
        // TODO add your handling code here:
        Admin.logoutMainMenu_Admin();
    }//GEN-LAST:event_ButtonLogoutAdminMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonAddnewAdmin;
    private javax.swing.JButton ButtonChangeAdmin;
    private javax.swing.JButton ButtonLogoutAdmin;
    private javax.swing.JButton ButtondeleteDataAdmin;
    private javax.swing.JScrollPane TableEmployeAdmin;
    private javax.swing.JTable TableEmployee;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
